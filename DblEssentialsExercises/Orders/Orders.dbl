
;;; <summary>
;;; The main entry point for the application.
;;; </summary>
main Orders

    .include "WND:windows.def"
    .include "INC:header.def"
    .include "INC:detail.def"

    record
        tt,             i4
        menuWindow,     i4
        orderWindow,    i4
        itemWindow,     i4

        ;File channel numbers
        chnHeader,      i4
        chnDetail,      i4

        ;detail,         strDetail
        group now, a
            year,           a4
            month,          a2
            day,            a2
            hour,           a2
            minute,         a2
            second,         a2
        endgroup
        menuItem,           a1
    endrecord

    ;Dynamic memory tracking data
    record
        mh,             D_HANDLE    ;Dynamic memory handle
        ms,             i4          ;Size of dynamic memory in rows
        mc,             i4          ;Number of rows currently used
    endrecord

proc

    call startup
    call process
    call shutdown

    stop

    ;----------------------------------------------------------
    ;Startup code
    ;
startup,

    now = %datetime

    ;Open the terminal channel
    open(tt=0,o,"tt:")

    ;Configure the terminal environment
    xcall flags(7004020,1)

    ;Initialize the Synergy Windows environment
    xcall w_init(1,tt,5)

    ;Clear the screen
    display(tt,$scr_clr(SCREEN))

    ;Display a title in the main application drag-bar
    xcall w_caption(WC_SET,"Order Entry Application")

    ;Open the order header file

    repeat
    begin
        open(chnHeader=0,U:I,"DAT:header.ism") [$ERR_FNF=hnf]
        exitloop
    hnf,;Order header file is missing, create a new one
        xcall isamc("DAT:header.ism",^size(header),1,"start=1,length=6,nodups,nomodify")
    end

    ;Open the order detail file

    repeat
    begin
        open(chnDetail=0,U:I,"DAT:detail.ism") [$ERR_FNF=dnf]
        exitloop
    dnf,;Order detail file is missing, create a new one
        xcall isamc("DAT:detail.ism",^size(strDetail),1,"start=1:7,length=6:4,nodups,nomodify")
    end

    return

    ;----------------------------------------------------------
    ;Main processing code
    ;
process,

    ;Create a window for the application main menu
    xcall create_window(menuWindow,"MENU",9,21,5,30,"Order Processing Menu")

    xcall display_text(menuWindow,2,2,"[A] Add an order")
    xcall display_text(menuWindow,4,2,"[V] View an order")
    xcall display_text(menuWindow,6,2,"[E] Exit")

    xcall display_text(menuWindow,8,2,"Select an option: ")

    repeat
    begin
        xcall wait_key(menuWindow,8,20,menuItem)

        using menuItem select
        ("A","a"),
            call order_header
        ("V","v"),
            call view_header
        ("E","e"),
            exitloop
        (),
            xcall display_message("Invalid option!")
        endusing
    end

    xcall delete_window(menuWindow)

    return

    ;----------------------------------------------------------
    ;Shutdown code
    ;
shutdown,

    ;Close the data files
    close chnHeader, chnDetail

    ;Clear the screen and close the terminal
    display(tt,$scr_clr(SCREEN))
    xcall w_exit
    close tt

    return

    ;----------------------------------------------------------
    ;Enter a new order
    ;
order_header,
    
    ;Create a window to allow the user to type in a new order
    xcall create_window(orderWindow,"ORDER",8,60,7,10,"Create an Order")

    xcall display_text(orderWindow,2,2,"Order number     :")
    xcall display_text(orderWindow,4,2,"Customer account :")
    xcall display_text(orderWindow,5,2,"Order date       :")
    xcall display_text(orderWindow,6,2,"Placed by        :")
    xcall display_text(orderWindow,7,2,"Sales rep code   :")

    repeat
    begin
        xcall input(orderWindow,2,21,header.oh_number)

        ;;Did the user enter an order number?
        if (!header.oh_number)
            exitloop

        ;Verify that the order does not already exist
        if (%file_access(FileOp.Find,chnHeader,,header.oh_number)==FileResult.OK)
        begin
            xcall display_message("Order already exists!")
            nextloop
        end

        xcall input(orderWindow,4,21,header.oh_customer,true)
        xcall input(orderWindow,5,21,header.oh_date,,,true)
        xcall input(orderWindow,6,21,header.oh_contact,true)
        xcall input(orderWindow,7,21,header.oh_salesrep,true)

        ;Allocate dynamic memory
        mh = %mem_proc(DM_ALLOC,^size(strDetail)*(ms=3))
        mc = 0

        ;Get the line items for the order
        call order_detail

        ;Save the order
        if (mc)
        begin
            ;First save the order header record
            if (%file_access(FileOp.Create,chnHeader,header)!=FileResult.OK) then
            begin
                xcall display_message("Failed to save order header record!")
            end
            else
            begin
                data ix, i4
                for ix from 1 thru mc
                begin
                    if (%file_access(FileOp.Create,chnDetail,^m(strDetail[ix],mh))!=FileResult.OK)
                    begin
                        xcall display_message("Failed to an order detail record!")
                        exitloop
                    end
                end
            end
        end

        ;Deallocate dynamic memory
        mh = %mem_proc(DM_FREE,mh)
        set ms,mc=0

        xcall clear_box(orderWindow,2,21,7,60)
    end

    xcall delete_window(orderWindow)

    return

    ;----------------------------------------------------------
    ;Enter items onto a new order
    ;
order_detail,

    ;Create a window to allow the user to type new order items
    xcall create_window(itemWindow,"ORDERITEM",8,60,10,15,"Add Items to Order")

    xcall display_text(itemWindow,2,2,"Order number : " + %string(header.oh_number,"XXXXXX"))
    xcall display_text(itemWindow,3,2,"Item number  : ")

    xcall display_text(itemWindow,5,2,"Part number  :")
    xcall display_text(itemWindow,6,2,"Quantity     :")
    xcall display_text(itemWindow,7,2,"Unit price   :")

    repeat
    begin
        if ((mc+=1)>ms)
        begin
            mh = %mem_proc(DM_RESIZ,^size(strDetail)*(ms+=3),mh)
        end

        ^m(strDetail[mc].od_number,mh) = header.oh_number
        ^m(strDetail[mc].od_item,mh) = mc

        xcall display_text(itemWindow,3,17,%string(mc) + " of " + %string(ms))

        xcall input(itemWindow,5,17,^m(strDetail[mc].od_part,mh))

        ;;Did the user enter a part number?
        if (!^m(strDetail[mc].od_part,mh))
        begin
            mc-=1
            exitloop
        end

        xcall input(itemWindow,6,17,^m(strDetail[mc].od_qty,mh),true)
        xcall input(itemWindow,7,17,^m(strDetail[mc].od_unit_price,mh),true)

        xcall clear_box(itemWindow,5,17,7,60)
    end

    xcall delete_window(itemWindow)

    return

    ;----------------------------------------------------------
    ;Enter a new order
    ;
view_header,
    
    ;Create a window to allow the user to type in a new order
    xcall create_window(orderWindow,"ORDER",10,60,7,10,"View an Order")

    xcall display_text(orderWindow,2,2,"Order number     :")
    xcall display_text(orderWindow,4,2,"Customer account :")
    xcall display_text(orderWindow,5,2,"Order date       :")
    xcall display_text(orderWindow,6,2,"Placed by        :")
    xcall display_text(orderWindow,7,2,"Sales rep code   :")

    xcall display_text(orderWindow,9,2,"Press a key      :")

    repeat
    begin
        xcall input(orderWindow,2,21,header.oh_number)

        ;;Did the user enter an order number?
        if (!header.oh_number)
            exitloop

        ;Verify that the order does not already exist
        if (%file_access(FileOp.Read,chnHeader,header,header.oh_number)!=FileResult.OK)
        begin
            xcall display_message("Order does not exist!")
            nextloop
        end

        xcall display_text(orderWindow,4,21,header.oh_customer)
        xcall display_text(orderWindow,5,21,%string(header.oh_date,"XXXX/XX/XX"))
        xcall display_text(orderWindow,6,21,header.oh_contact)
        xcall display_text(orderWindow,7,21,%string(header.oh_salesrep))

        begin
            data onechar, a1
            xcall wait_key(orderWindow,9,21,onechar)            
        end

        ;Allocate dynamic memory
        mh = %mem_proc(DM_ALLOC,^size(strDetail)*(ms=1))
        mc = 0

        ;Get the line items for the order
        call view_detail

        ;Deallocate dynamic memory
        mh = %mem_proc(DM_FREE,mh)
        set ms,mc=0

        xcall clear_box(orderWindow,2,21,7,60)
    end

    xcall delete_window(orderWindow)

    return

    ;----------------------------------------------------------
    ;Enter items onto a new order
    ;
view_detail,

    ;Create a window to allow the user to type new order items
    xcall create_window(itemWindow,"ORDERITEM",10,60,10,15,"View Order Items")

    xcall display_text(itemWindow,2,2,"Order number : " + %string(header.oh_number,"XXXXXX"))
    xcall display_text(itemWindow,3,2,"Item number  : ")

    xcall display_text(itemWindow,5,2,"Part number  :")
    xcall display_text(itemWindow,6,2,"Quantity     :")
    xcall display_text(itemWindow,7,2,"Unit price   :")

    xcall display_text(itemWindow,9,2,"Press a key  :")

    ;Position to the first item for the order
    if (%file_access(FileOp.Find,chnDetail,,header.oh_number)!=FileResult.OK)
    begin
        nop
    end

    repeat
    begin
        if ((%file_access(FileOp.ReadNext,chnDetail,^m(strDetail[1],mh))!=FileResult.OK) 
        &     || (^m(strDetail[1].od_number,mh) != header.oh_number))
        begin
            exitloop
        end

        xcall display_text(itemWindow,3,17,%string(mc+=1))
        xcall display_text(itemWindow,5,17,^m(strDetail[1].od_part,mh))
        xcall display_text(itemWindow,6,17,%string(^m(strDetail[1].od_qty,mh)))
        xcall display_text(itemWindow,7,17,%string(^m(strDetail[1].od_unit_price,mh),"$$$$,$$X.XX"))
        begin
            data onechar, a1
            xcall wait_key(itemWindow,9,17,onechar)            
        end

        xcall clear_box(itemWindow,5,17,7,60)
    end

    xcall delete_window(itemWindow)

    return


endmain